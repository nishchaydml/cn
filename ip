#include <stdio.h>
#include <string.h>
#include <stdbool.h>

bool isValidIPv4(const char *ip) {
    int octet1, octet2, octet3, octet4;
    if (sscanf(ip, "%d.%d.%d.%d", &octet1, &octet2, &octet3, &octet4) != 4) {
        return false;  // Not all four octets were successfully read
    }

    if (octet1 < 0 || octet1 > 255 ||
        octet2 < 0 || octet2 > 255 ||
        octet3 < 0 || octet3 > 255 ||
        octet4 < 0 || octet4 > 255) {
        return false;  // Octet values are out of range
    }

    return true;  // Valid IPv4 address
}

int main() {
    char ip[16];
    printf("Enter an IPv4 address: ");
    scanf("%s", ip);

    if (!isValidIPv4(ip)) {
        printf("Invalid IP address\n");
        return 0;
    }

    int octet1, octet2, octet3, octet4;
    sscanf(ip, "%d.%d.%d.%d", &octet1, &octet2, &octet3, &octet4);

    if (octet1 >= 0 && octet1 <= 127) {
        printf("Class A\n");
        printf("Network ID: %d\n", octet1);
        printf("Host ID: %d.%d.%d\n", octet2, octet3, octet4);
    } else if (octet1 >= 128 && octet1 <= 191) {
        printf("Class B\n");
        printf("Network ID: %d.%d\n", octet1, octet2);
        printf("Host ID: %d.%d\n", octet3, octet4);
    } else if (octet1 >= 192 && octet1 <= 223) {
        printf("Class C\n");
        printf("Network ID: %d.%d.%d\n", octet1, octet2, octet3);
        printf("Host ID: %d\n", octet4);
    } else if (octet1 >= 224 && octet1 <= 239) {
        printf("Class D (Multicast)\n");
        printf("No network or host ID separation in multicast addresses\n");
    } else if (octet1 >= 240 && octet1 <= 255) {
        printf("Class E (Experimental)\n");
        printf("No network or host ID separation in experimental addresses\n");
    } else {
        printf("Invalid IP address\n");
    }

    returnÂ 0;
}

IPV4
